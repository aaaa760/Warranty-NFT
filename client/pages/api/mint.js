const Web3 = require("web3")
const web3 = new Web3("http://127.0.0.1:8545/")

// const x = "0xf901e68080830186a0945fbdb2315678afecb367f032d93f642f64180aa380b90184b94a791c00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000163000000000000000000000000000000000000000000000000000000000000000d4974656d204e756d6265722031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054626166796265696868336d677678627969776868346a7834717732726c6c65627866336b62693373763361777a72726174716b65346a74353766712e697066732e647765622e6c696e6b2f756e646566696e656400000000000000000000000026a0d6663b964b2b1100d98432d62ddd7718c657dbcf620099d0f8e81b8bb71cf5d5a01e944e73824af76cb6c17167cf52c46be02325d575af265518ad6d1c2ff05a73"

const send = async (signature) => {
    // signature.rawTransaction
    return await web3.eth.sendSignedTransaction(signature).on("receipt", receipt => receipt)
}

// export const config = {
//     api: {
//       bodyParser: false
//     }
// }

export default async function handler (req, res) {
    if(req.method === "POST") {
        const signature = req.body.signature
        try {
            const receipt = await send(signature)
            console.log(receipt)
        } catch (error) {
            console.log(error)
        }
        res.status(200).json({})
    }
}

// correct sign : 0xf901ec01846a426856830186a0945fbdb2315678afecb367f032d93f642f64180aa380b90184b94a791c00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000163000000000000000000000000000000000000000000000000000000000000000d4974656d204e756d6265722031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054626166796265696868336d677678627969776868346a7834717732726c6c65627866336b62693373763361777a72726174716b65346a74353766712e697066732e647765622e6c696e6b2f756e646566696e656400000000000000000000000082f4f6a05aa6033ee2706a68f97c279004664d99da87711233136f20679bc48cab1cc394a043e7842f36f8bcf10898c620fe77fea669bed149e3f8b14e930c6813228e5f7b
// try sign: 0xf901e68080830186a0945fbdb2315678afecb367f032d93f642f64180aa380b90184b94a791c00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000163000000000000000000000000000000000000000000000000000000000000000d4974656d204e756d6265722031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054626166796265696868336d677678627969776868346a7834717732726c6c65627866336b62693373763361777a72726174716b65346a74353766712e697066732e647765622e6c696e6b2f756e646566696e656400000000000000000000000026a0d6663b964b2b1100d98432d62ddd7718c657dbcf620099d0f8e81b8bb71cf5d5a01e944e73824af76cb6c17167cf52c46be02325d575af265518ad6d1c2ff05a73